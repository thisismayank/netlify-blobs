{"ast":null,"code":"var _jsxFileName = \"/Users/mayanka/Workspace/netlify-image-cdn/src/Components/cachecontrol.component.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CacheControl() {\n  _s();\n  const [lastFetch, setLastFetch] = useState(null);\n  const [data, setData] = useState([]);\n  const fetchData = async (cacheControl = \"no-cache\") => {\n    const response = await fetch(\"https://jsonplaceholder.typicode.com/posts\", {\n      headers: {\n        \"Cache-Control\": cacheControl\n      }\n    });\n    const posts = await response.json();\n    console.log(\"post\", posts);\n    setData(posts.slice(0, 5)); // Display only the first 5 posts for simplicity\n    setLastFetch(new Date().toISOString());\n    alert(`Data fetched with Cache-Control: ${cacheControl}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => fetchData(),\n      children: \"Fetch Data with No Cache\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => fetchData(\"public, max-age=604800\"),\n      children: \"Fetch Data with Cache\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.map(post => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.title\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Last fetched at: \", lastFetch || \"Never\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(CacheControl, \"GysRugZH7yQLpAIHHc3Y55qnK0Q=\");\n_c = CacheControl;\nexport default CacheControl;\nvar _c;\n$RefreshReg$(_c, \"CacheControl\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CacheControl","_s","lastFetch","setLastFetch","data","setData","fetchData","cacheControl","response","fetch","headers","posts","json","console","log","slice","Date","toISOString","alert","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","post","title","id","_c","$RefreshReg$"],"sources":["/Users/mayanka/Workspace/netlify-image-cdn/src/Components/cachecontrol.component.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction CacheControl() {\n  const [lastFetch, setLastFetch] = useState(null);\n  const [data, setData] = useState([]);\n\n  const fetchData = async (cacheControl = \"no-cache\") => {\n    const response = await fetch(\"https://jsonplaceholder.typicode.com/posts\", {\n      headers: {\n        \"Cache-Control\": cacheControl,\n      },\n    });\n    const posts = await response.json();\n    console.log(\"post\", posts);\n    setData(posts.slice(0, 5)); // Display only the first 5 posts for simplicity\n    setLastFetch(new Date().toISOString());\n    alert(`Data fetched with Cache-Control: ${cacheControl}`);\n  };\n\n  return (\n    <div>\n      <button onClick={() => fetchData()}>Fetch Data with No Cache</button>\n      <button onClick={() => fetchData(\"public, max-age=604800\")}>\n        Fetch Data with Cache\n      </button>\n      <div>\n        {data.map((post) => (\n          <p key={post.id}>{post.title}</p>\n        ))}\n      </div>\n      <p>Last fetched at: {lastFetch || \"Never\"}</p>\n    </div>\n  );\n}\n\nexport default CacheControl;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMS,SAAS,GAAG,MAAAA,CAAOC,YAAY,GAAG,UAAU,KAAK;IACrD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,EAAE;MACzEC,OAAO,EAAE;QACP,eAAe,EAAEH;MACnB;IACF,CAAC,CAAC;IACF,MAAMI,KAAK,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IACnCC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEH,KAAK,CAAC;IAC1BN,OAAO,CAACM,KAAK,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5BZ,YAAY,CAAC,IAAIa,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC;IACtCC,KAAK,CAAE,oCAAmCX,YAAa,EAAC,CAAC;EAC3D,CAAC;EAED,oBACER,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAQqB,OAAO,EAAEA,CAAA,KAAMd,SAAS,CAAC,CAAE;MAAAa,QAAA,EAAC;IAAwB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACrEzB,OAAA;MAAQqB,OAAO,EAAEA,CAAA,KAAMd,SAAS,CAAC,wBAAwB,CAAE;MAAAa,QAAA,EAAC;IAE5D;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTzB,OAAA;MAAAoB,QAAA,EACGf,IAAI,CAACqB,GAAG,CAAEC,IAAI,iBACb3B,OAAA;QAAAoB,QAAA,EAAkBO,IAAI,CAACC;MAAK,GAApBD,IAAI,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CACjC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNzB,OAAA;MAAAoB,QAAA,GAAG,mBAAiB,EAACjB,SAAS,IAAI,OAAO;IAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV;AAACvB,EAAA,CA/BQD,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AAiCrB,eAAeA,YAAY;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}