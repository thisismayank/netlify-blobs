{"ast":null,"code":"var _jsxFileName = \"/Users/mayanka/Workspace/netlify-image-cdn/src/Components/imagemanager.component.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./neumorphism.css\";\nimport { Button, TextField, Box, InputLabel, MenuItem, Select, FormControl, Typography, Divider, Fab } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageManager() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [images, setImages] = useState([]);\n  const [imageData, setImageData] = useState([]);\n  const [stores, setStores] = useState([]);\n  const [selectedStore, setSelectedStore] = useState(\"\");\n  useEffect(() => {\n    fetchStores();\n  }, []);\n  const fetchStores = async () => {\n    try {\n      const response = await fetch(\"/.netlify/functions/listStores\");\n      if (response.ok) {\n        const data = await response.json();\n        setStores(data);\n        if (data.length > 0) {\n          setSelectedStore(data[0]); // Set the first store as default selected\n          fetchImages(); // Optionally fetch images immediately upon selecting a store\n        }\n      } else {\n        console.error(\"Failed to fetch stores\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching stores:\", error);\n    }\n  };\n  const fetchImageWithKey = async key => {\n    console.log(\"fetch image key\", key);\n    const response = await fetch(`/.netlify/functions/getImage?key=${encodeURIComponent(key)}`);\n    if (response.ok) {\n      console.log(\"HERE\");\n      const data = await response.json();\n      console.log(\"data\", data);\n      setImageData(data.metadata || []);\n    }\n  };\n  const fetchImages = async () => {\n    if (!selectedStore) return;\n    try {\n      const response = await fetch(`/.netlify/functions/listBlobs?store=${encodeURIComponent(selectedStore)}`);\n      if (response.ok) {\n        const data = await response.json();\n        console.log(\"RESPONSE\", data);\n        setImages(data);\n      } else {\n        console.error(\"Failed to fetch images\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching images:\", error);\n    }\n  };\n  const handleUpload = async () => {\n    if (!file || !selectedStore) {\n      alert(\"Please select a file and a store first!\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"store\", selectedStore);\n    try {\n      const response = await fetch(\"/.netlify/functions/uploadImage\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (response.ok) {\n        const data = await response.json();\n        alert(\"Upload Successful!\");\n        fetchImages(); // Refresh images after upload\n      } else {\n        const error = await response.json();\n        alert(`Upload failed: ${error.message}`);\n      }\n    } catch (error) {\n      alert(\"Upload failed:\", error.message);\n    }\n  };\n  const deleteImage = async key => {\n    if (!selectedStore) return;\n    try {\n      const response = await fetch(`/.netlify/functions/deleteBlob?key=${encodeURIComponent(key)}&store=${encodeURIComponent(selectedStore)}`, {\n        method: \"DELETE\"\n      });\n      if (response.ok) {\n        alert(\"Image deleted successfully\");\n        const deletedKey = `${key}-${new Date().getTime()}`; // Unique key for localStorage\n        localStorage.setItem(deletedKey, key);\n        fetchImages(); // Refresh images after deletion\n      } else {\n        alert(\"Failed to delete image\");\n      }\n    } catch (error) {\n      alert(\"Error deleting image:\", error);\n    }\n  };\n  const handleStoreChange = e => {\n    setSelectedStore(e.target.value);\n    fetchImages();\n  };\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  function formatBytes(bytes, decimals = 2) {\n    if (bytes === 0) return \"0 Bytes\";\n    const k = 1024; // Or 1000 depending on what standard you want to use\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i];\n  }\n  console.log(\"IMAGE DATA\", imageData);\n  const createNewStore = async () => {\n    const storeName = prompt(\"Enter new store name:\");\n    if (!storeName) {\n      alert(\"Store name is required\");\n      return;\n    }\n    try {\n      const response = await fetch(\"/.netlify/functions/createStore\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          storeName\n        })\n      });\n      if (response.ok) {\n        alert(\"Store created successfully!\");\n        fetchStores(); // Refresh store list\n      } else {\n        const error = await response.json();\n        alert(`Failed to create store: ${error.message}`);\n      }\n    } catch (error) {\n      alert(`Error: ${error.message}`);\n    }\n  };\n  const isDeleted = key => {\n    return Object.keys(localStorage).some(k => localStorage.getItem(k) === key);\n  };\n  const neuStyle = {\n    backgroundColor: \"#e0e5ec\",\n    boxShadow: \"4px 4px 10px #a3b1c6, -4px -4px 10px #ffffff\",\n    \"&:hover\": {\n      boxShadow: \"none\",\n      backgroundColor: \"#e0e5ec\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"neumorphic\",\n    sx: {\n      p: 4,\n      maxWidth: 500,\n      margin: \"auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      sx: {\n        fontWeight: \"bold\",\n        textAlign: \"center\",\n        mb: 2\n      },\n      children: \"Netlify Blobs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: \"text.secondary\",\n      sx: {\n        textAlign: \"center\",\n        mb: 3\n      },\n      children: \"Upload and Manage Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      variant: \"standard\",\n      sx: {\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"store-select-label\",\n        children: \"Select Store\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"store-select-label\",\n        id: \"demo-simple-select-standard\",\n        value: selectedStore,\n        onChange: handleStoreChange,\n        label: \"Store\",\n        className: \"neumorphic-inset\",\n        children: stores.map((store, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: store,\n          children: store\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"neumorphic-button\",\n      onClick: fetchImages,\n      sx: {\n        mb: 2,\n        width: \"100%\"\n      },\n      children: [\"Fetch Images from \", selectedStore, \" Store\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      sx: {\n        my: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange,\n      accept: \"*\",\n      className: \"neumorphic-inset\",\n      style: {\n        width: \"100%\",\n        padding: \"10px\",\n        marginBottom: \"20px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"neumorphic-button\",\n      onClick: handleUpload,\n      sx: {\n        width: \"100%\",\n        mb: 2\n      },\n      children: \"Upload Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"neumorphic-button\",\n      onClick: createNewStore,\n      sx: {\n        width: \"100%\"\n      },\n      children: \"Create New Store\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), images.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [\"Uploaded Images in \", selectedStore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this), images.filter(img => !isDeleted(img.key)).map((image, index) => /*#__PURE__*/_jsxDEV(Box, {\n        className: \"neumorphic-inset\",\n        sx: {\n          my: 1,\n          p: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => console.log(\"Fetching image\"),\n          children: image.key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"neumorphic-button\",\n          onClick: () => console.log(\"Deleting image\"),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }, this), imageData.filename && /*#__PURE__*/_jsxDEV(Box, {\n      className: \"neumorphic-inset\",\n      sx: {\n        mt: 2,\n        p: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Blob Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Filename: \", imageData.filename]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Encoding: \", imageData.encoding]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Mime Type: \", imageData.mimeType]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Size: \", formatBytes(imageData.size)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Base64: \", imageData.imageBase64]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"neumorphic-button\",\n        onClick: () => console.log(\"Deleting image\"),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageManager, \"qwpkgfvbh/pKJLIfgeEbRxBmlLc=\");\n_c = ImageManager;\nexport default ImageManager;\n{\n  /* <img\n                src={`data:image/jpeg;base64,${image.data}`}\n                alt={image.metadata.filename}\n                style={{ width: \"100px\", height: \"auto\" }}\n              />\n              <p>Filename: {image.metadata.filename}</p>\n              <p>MIME type: {image.metadata.mimetype}</p> */\n}\nvar _c;\n$RefreshReg$(_c, \"ImageManager\");","map":{"version":3,"names":["React","useState","useEffect","Button","TextField","Box","InputLabel","MenuItem","Select","FormControl","Typography","Divider","Fab","jsxDEV","_jsxDEV","ImageManager","_s","file","setFile","images","setImages","imageData","setImageData","stores","setStores","selectedStore","setSelectedStore","fetchStores","response","fetch","ok","data","json","length","fetchImages","console","error","fetchImageWithKey","key","log","encodeURIComponent","metadata","handleUpload","alert","formData","FormData","append","method","body","message","deleteImage","deletedKey","Date","getTime","localStorage","setItem","handleStoreChange","e","target","value","handleFileChange","event","files","formatBytes","bytes","decimals","k","dm","sizes","i","Math","floor","parseFloat","pow","toFixed","createNewStore","storeName","prompt","headers","JSON","stringify","isDeleted","Object","keys","some","getItem","neuStyle","backgroundColor","boxShadow","className","sx","p","maxWidth","margin","children","variant","component","fontWeight","textAlign","mb","fileName","_jsxFileName","lineNumber","columnNumber","color","fullWidth","id","labelId","onChange","label","map","store","index","onClick","width","my","type","accept","style","padding","marginBottom","mt","filter","img","image","filename","encoding","mimeType","size","imageBase64","_c","$RefreshReg$"],"sources":["/Users/mayanka/Workspace/netlify-image-cdn/src/Components/imagemanager.component.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./neumorphism.css\";\nimport {\n  Button,\n  TextField,\n  Box,\n  InputLabel,\n  MenuItem,\n  Select,\n  FormControl,\n  Typography,\n  Divider,\n  Fab,\n} from \"@mui/material\";\n\nfunction ImageManager() {\n  const [file, setFile] = useState(null);\n  const [images, setImages] = useState([]);\n  const [imageData, setImageData] = useState([]);\n\n  const [stores, setStores] = useState([]);\n  const [selectedStore, setSelectedStore] = useState(\"\");\n\n  useEffect(() => {\n    fetchStores();\n  }, []);\n\n  const fetchStores = async () => {\n    try {\n      const response = await fetch(\"/.netlify/functions/listStores\");\n      if (response.ok) {\n        const data = await response.json();\n        setStores(data);\n        if (data.length > 0) {\n          setSelectedStore(data[0]); // Set the first store as default selected\n          fetchImages(); // Optionally fetch images immediately upon selecting a store\n        }\n      } else {\n        console.error(\"Failed to fetch stores\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching stores:\", error);\n    }\n  };\n  const fetchImageWithKey = async (key) => {\n    console.log(\"fetch image key\", key);\n    const response = await fetch(\n      `/.netlify/functions/getImage?key=${encodeURIComponent(key)}`\n    );\n\n    if (response.ok) {\n      console.log(\"HERE\");\n      const data = await response.json();\n      console.log(\"data\", data);\n      setImageData(data.metadata || []);\n    }\n  };\n  const fetchImages = async () => {\n    if (!selectedStore) return;\n    try {\n      const response = await fetch(\n        `/.netlify/functions/listBlobs?store=${encodeURIComponent(\n          selectedStore\n        )}`\n      );\n\n      if (response.ok) {\n        const data = await response.json();\n        console.log(\"RESPONSE\", data);\n        setImages(data);\n      } else {\n        console.error(\"Failed to fetch images\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching images:\", error);\n    }\n  };\n\n  const handleUpload = async () => {\n    if (!file || !selectedStore) {\n      alert(\"Please select a file and a store first!\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"store\", selectedStore);\n\n    try {\n      const response = await fetch(\"/.netlify/functions/uploadImage\", {\n        method: \"POST\",\n        body: formData,\n      });\n      if (response.ok) {\n        const data = await response.json();\n        alert(\"Upload Successful!\");\n        fetchImages(); // Refresh images after upload\n      } else {\n        const error = await response.json();\n        alert(`Upload failed: ${error.message}`);\n      }\n    } catch (error) {\n      alert(\"Upload failed:\", error.message);\n    }\n  };\n\n  const deleteImage = async (key) => {\n    if (!selectedStore) return;\n    try {\n      const response = await fetch(\n        `/.netlify/functions/deleteBlob?key=${encodeURIComponent(\n          key\n        )}&store=${encodeURIComponent(selectedStore)}`,\n        { method: \"DELETE\" }\n      );\n      if (response.ok) {\n        alert(\"Image deleted successfully\");\n        const deletedKey = `${key}-${new Date().getTime()}`; // Unique key for localStorage\n        localStorage.setItem(deletedKey, key);\n        fetchImages(); // Refresh images after deletion\n      } else {\n        alert(\"Failed to delete image\");\n      }\n    } catch (error) {\n      alert(\"Error deleting image:\", error);\n    }\n  };\n\n  const handleStoreChange = (e) => {\n    setSelectedStore(e.target.value);\n    fetchImages();\n  };\n\n  const handleFileChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n\n  function formatBytes(bytes, decimals = 2) {\n    if (bytes === 0) return \"0 Bytes\";\n\n    const k = 1024; // Or 1000 depending on what standard you want to use\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i];\n  }\n\n  console.log(\"IMAGE DATA\", imageData);\n\n  const createNewStore = async () => {\n    const storeName = prompt(\"Enter new store name:\");\n    if (!storeName) {\n      alert(\"Store name is required\");\n      return;\n    }\n\n    try {\n      const response = await fetch(\"/.netlify/functions/createStore\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ storeName }),\n      });\n\n      if (response.ok) {\n        alert(\"Store created successfully!\");\n        fetchStores(); // Refresh store list\n      } else {\n        const error = await response.json();\n        alert(`Failed to create store: ${error.message}`);\n      }\n    } catch (error) {\n      alert(`Error: ${error.message}`);\n    }\n  };\n  const isDeleted = (key) => {\n    return Object.keys(localStorage).some(\n      (k) => localStorage.getItem(k) === key\n    );\n  };\n\n  const neuStyle = {\n    backgroundColor: \"#e0e5ec\",\n    boxShadow: \"4px 4px 10px #a3b1c6, -4px -4px 10px #ffffff\",\n    \"&:hover\": {\n      boxShadow: \"none\",\n      backgroundColor: \"#e0e5ec\",\n    },\n  };\n  return (\n    <Box className=\"neumorphic\" sx={{ p: 4, maxWidth: 500, margin: \"auto\" }}>\n      <Typography\n        variant=\"h4\"\n        component=\"h1\"\n        sx={{ fontWeight: \"bold\", textAlign: \"center\", mb: 2 }}\n      >\n        Netlify Blobs\n      </Typography>\n      <Typography\n        variant=\"body2\"\n        color=\"text.secondary\"\n        sx={{ textAlign: \"center\", mb: 3 }}\n      >\n        Upload and Manage Files\n      </Typography>\n\n      <FormControl fullWidth variant=\"standard\" sx={{ mb: 2 }}>\n        <InputLabel id=\"store-select-label\">Select Store</InputLabel>\n        <Select\n          labelId=\"store-select-label\"\n          id=\"demo-simple-select-standard\"\n          value={selectedStore}\n          onChange={handleStoreChange}\n          label=\"Store\"\n          className=\"neumorphic-inset\"\n        >\n          {stores.map((store, index) => (\n            <MenuItem key={index} value={store}>\n              {store}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n\n      <Button\n        className=\"neumorphic-button\"\n        onClick={fetchImages}\n        sx={{ mb: 2, width: \"100%\" }}\n      >\n        Fetch Images from {selectedStore} Store\n      </Button>\n\n      <Divider sx={{ my: 2 }} />\n\n      <input\n        type=\"file\"\n        onChange={handleFileChange}\n        accept=\"*\"\n        className=\"neumorphic-inset\"\n        style={{ width: \"100%\", padding: \"10px\", marginBottom: \"20px\" }}\n      />\n      <Button\n        className=\"neumorphic-button\"\n        onClick={handleUpload}\n        sx={{ width: \"100%\", mb: 2 }}\n      >\n        Upload Image\n      </Button>\n\n      <Button\n        className=\"neumorphic-button\"\n        onClick={createNewStore}\n        sx={{ width: \"100%\" }}\n      >\n        Create New Store\n      </Button>\n\n      {images.length > 0 && (\n        <Box sx={{ mt: 3 }}>\n          <Typography variant=\"h6\">\n            Uploaded Images in {selectedStore}\n          </Typography>\n          {images\n            .filter((img) => !isDeleted(img.key))\n            .map((image, index) => (\n              <Box\n                key={index}\n                className=\"neumorphic-inset\"\n                sx={{ my: 1, p: 2 }}\n              >\n                <Button onClick={() => console.log(\"Fetching image\")}>\n                  {image.key}\n                </Button>\n                <Button\n                  className=\"neumorphic-button\"\n                  onClick={() => console.log(\"Deleting image\")}\n                >\n                  Delete\n                </Button>\n              </Box>\n            ))}\n        </Box>\n      )}\n\n      {imageData.filename && (\n        <Box className=\"neumorphic-inset\" sx={{ mt: 2, p: 2 }}>\n          <Typography variant=\"h6\">Blob Details</Typography>\n          <Typography>Filename: {imageData.filename}</Typography>\n          <Typography>Encoding: {imageData.encoding}</Typography>\n          <Typography>Mime Type: {imageData.mimeType}</Typography>\n          <Typography>Size: {formatBytes(imageData.size)}</Typography>\n          <Typography>Base64: {imageData.imageBase64}</Typography>\n          <Button\n            className=\"neumorphic-button\"\n            onClick={() => console.log(\"Deleting image\")}\n          >\n            Delete\n          </Button>\n        </Box>\n      )}\n    </Box>\n  );\n}\n\nexport default ImageManager;\n{\n  /* <img\n                src={`data:image/jpeg;base64,${image.data}`}\n                alt={image.metadata.filename}\n                style={{ width: \"100px\", height: \"auto\" }}\n              />\n              <p>Filename: {image.metadata.filename}</p>\n              <p>MIME type: {image.metadata.mimetype}</p> */\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}