{"ast":null,"code":"var _jsxFileName = \"/Users/mayanka/Workspace/netlify-image-cdn/src/Components/imagemanager.component.js\",\n  _s = $RefreshSig$();\n// src/components/ImageManager.js\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageManager() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [images, setImages] = useState([]);\n\n  //   useEffect(() => {\n  //     fetchImages();\n  //   }, []);\n\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!file) {\n      alert(\"Please select a file first!\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const response = await fetch(\"/.netlify/functions/uploadImage\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log(\"response\", data);\n        alert(\"Upload Successful!\");\n        fetchImages(data.key); // Fetch the latest images list including the new upload\n      } else {\n        const error = await response.json();\n        alert(`Upload failed: ${error.message}`);\n      }\n    } catch (error) {\n      alert(\"Upload failed:\", error.message);\n    }\n  };\n  const fetchImages = async key => {\n    console.log(\"fetch image key\", key);\n    const response = await fetch(`/.netlify/functions/getImage?key=${encodeURIComponent(key)}`);\n    console.log(\"response\", response);\n    if (response.ok) {\n      const data = await response.json();\n      console.log(\"data\", data);\n      setImages(data.images || []);\n    }\n  };\n  console.log(\"Images\", images);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload and Manage Images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange,\n      accept: \"image/*\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Uploaded Images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), images.length > 0 ? images.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `data:image/jpeg;base64,${image.data}`,\n          alt: image.metadata.filename,\n          style: {\n            width: \"100px\",\n            height: \"auto\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Filename: \", image.metadata.filename]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"MIME type: \", image.metadata.mimetype]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No images to display.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageManager, \"gHeosUZ5QRA9D8VLO2kKTNhqC3g=\");\n_c = ImageManager;\nexport default ImageManager;\nvar _c;\n$RefreshReg$(_c, \"ImageManager\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ImageManager","_s","file","setFile","images","setImages","handleFileChange","event","target","files","handleUpload","alert","formData","FormData","append","response","fetch","method","body","ok","data","json","console","log","fetchImages","key","error","message","encodeURIComponent","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","accept","onClick","length","map","image","index","src","alt","metadata","filename","style","width","height","mimetype","_c","$RefreshReg$"],"sources":["/Users/mayanka/Workspace/netlify-image-cdn/src/Components/imagemanager.component.js"],"sourcesContent":["// src/components/ImageManager.js\nimport React, { useState } from \"react\";\n\nfunction ImageManager() {\n  const [file, setFile] = useState(null);\n  const [images, setImages] = useState([]);\n\n  //   useEffect(() => {\n  //     fetchImages();\n  //   }, []);\n\n  const handleFileChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n\n  const handleUpload = async () => {\n    if (!file) {\n      alert(\"Please select a file first!\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"file\", file);\n\n    try {\n      const response = await fetch(\"/.netlify/functions/uploadImage\", {\n        method: \"POST\",\n        body: formData,\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        console.log(\"response\", data);\n        alert(\"Upload Successful!\");\n        fetchImages(data.key); // Fetch the latest images list including the new upload\n      } else {\n        const error = await response.json();\n        alert(`Upload failed: ${error.message}`);\n      }\n    } catch (error) {\n      alert(\"Upload failed:\", error.message);\n    }\n  };\n\n  const fetchImages = async (key) => {\n    console.log(\"fetch image key\", key);\n    const response = await fetch(\n      `/.netlify/functions/getImage?key=${encodeURIComponent(key)}`\n    );\n\n    console.log(\"response\", response);\n    if (response.ok) {\n      const data = await response.json();\n      console.log(\"data\", data);\n      setImages(data.images || []);\n    }\n  };\n\n  console.log(\"Images\", images);\n\n  return (\n    <div>\n      <h2>Upload and Manage Images</h2>\n      <input type=\"file\" onChange={handleFileChange} accept=\"image/*\" />\n      <button onClick={handleUpload}>Upload Image</button>\n      <div>\n        <h3>Uploaded Images</h3>\n        {images.length > 0 ? (\n          images.map((image, index) => (\n            <div key={index}>\n              <img\n                src={`data:image/jpeg;base64,${image.data}`}\n                alt={image.metadata.filename}\n                style={{ width: \"100px\", height: \"auto\" }}\n              />\n              <p>Filename: {image.metadata.filename}</p>\n              <p>MIME type: {image.metadata.mimetype}</p>\n            </div>\n          ))\n        ) : (\n          <p>No images to display.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default ImageManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}