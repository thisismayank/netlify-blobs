{"ast":null,"code":"var _jsxFileName = \"/Users/mayanka/Workspace/netlify-image-cdn/src/Components/imagemanager.component.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Button, TextField, Select, MenuItem, FormControl, InputLabel, Box, Typography } from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageManager() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [images, setImages] = useState([]);\n  const [imageData, setImageData] = useState([]);\n  const [stores, setStores] = useState([]);\n  const [selectedStore, setSelectedStore] = useState(\"\");\n  useEffect(() => {\n    fetchStores();\n  }, []);\n  const fetchStores = async () => {\n    try {\n      const response = await fetch(\"/.netlify/functions/listStores\");\n      if (response.ok) {\n        const data = await response.json();\n        setStores(data);\n        if (data.length > 0) {\n          setSelectedStore(data[0]); // Set the first store as default selected\n          fetchImages(); // Optionally fetch images immediately upon selecting a store\n        }\n      } else {\n        console.error(\"Failed to fetch stores\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching stores:\", error);\n    }\n  };\n  const fetchImages = async () => {\n    if (!selectedStore) return;\n    try {\n      const response = await fetch(`/.netlify/functions/listBlobs?store=${encodeURIComponent(selectedStore)}`);\n      if (response.ok) {\n        const data = await response.json();\n        setImages(data);\n      } else {\n        console.error(\"Failed to fetch images\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching images:\", error);\n    }\n  };\n  const handleUpload = async () => {\n    if (!file || !selectedStore) {\n      alert(\"Please select a file and a store first!\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"store\", selectedStore);\n    try {\n      const response = await fetch(\"/.netlify/functions/uploadImage\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (response.ok) {\n        alert(\"Upload Successful!\");\n        fetchImages(); // Refresh images after upload\n      } else {\n        const error = await response.json();\n        alert(`Upload failed: ${error.message}`);\n      }\n    } catch (error) {\n      alert(`Upload failed: ${error.message}`);\n    }\n  };\n  const handleStoreChange = event => {\n    setSelectedStore(event.target.value);\n    fetchImages();\n  };\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Upload and Manage Images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      margin: \"normal\",\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"store-select-label\",\n        children: \"Store\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"store-select-label\",\n        value: selectedStore,\n        label: \"Store\",\n        onChange: handleStoreChange,\n        children: stores.map((store, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: store,\n          children: store\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      component: \"label\",\n      sx: {\n        mt: 2\n      },\n      children: [\"Upload File\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        hidden: true,\n        onChange: handleFileChange,\n        accept: \"image/*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleUpload,\n      variant: \"contained\",\n      color: \"primary\",\n      sx: {\n        ml: 2,\n        mt: 2\n      },\n      children: \"Upload Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      sx: {\n        mt: 2\n      },\n      children: [\"Uploaded Images in \", selectedStore]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), images.length > 0 ? images.map((image, index) => /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        alignItems: \"center\",\n        mt: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        children: image.key\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => deleteImage(image.key),\n        sx: {\n          ml: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"No images to display.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageManager, \"qwpkgfvbh/pKJLIfgeEbRxBmlLc=\");\n_c = ImageManager;\nexport default ImageManager;\nvar _c;\n$RefreshReg$(_c, \"ImageManager\");","map":{"version":3,"names":["React","useState","useEffect","Button","TextField","Select","MenuItem","FormControl","InputLabel","Box","Typography","DeleteIcon","jsxDEV","_jsxDEV","ImageManager","_s","file","setFile","images","setImages","imageData","setImageData","stores","setStores","selectedStore","setSelectedStore","fetchStores","response","fetch","ok","data","json","length","fetchImages","console","error","encodeURIComponent","handleUpload","alert","formData","FormData","append","method","body","message","handleStoreChange","event","target","value","handleFileChange","files","sx","p","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","margin","id","labelId","label","onChange","map","store","index","component","mt","type","hidden","accept","onClick","color","ml","image","display","alignItems","key","deleteImage","_c","$RefreshReg$"],"sources":["/Users/mayanka/Workspace/netlify-image-cdn/src/Components/imagemanager.component.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  TextField,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Box,\n  Typography,\n} from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\n\nfunction ImageManager() {\n  const [file, setFile] = useState(null);\n  const [images, setImages] = useState([]);\n  const [imageData, setImageData] = useState([]);\n\n  const [stores, setStores] = useState([]);\n  const [selectedStore, setSelectedStore] = useState(\"\");\n\n  useEffect(() => {\n    fetchStores();\n  }, []);\n\n  const fetchStores = async () => {\n    try {\n      const response = await fetch(\"/.netlify/functions/listStores\");\n      if (response.ok) {\n        const data = await response.json();\n        setStores(data);\n        if (data.length > 0) {\n          setSelectedStore(data[0]); // Set the first store as default selected\n          fetchImages(); // Optionally fetch images immediately upon selecting a store\n        }\n      } else {\n        console.error(\"Failed to fetch stores\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching stores:\", error);\n    }\n  };\n\n  const fetchImages = async () => {\n    if (!selectedStore) return;\n    try {\n      const response = await fetch(\n        `/.netlify/functions/listBlobs?store=${encodeURIComponent(\n          selectedStore\n        )}`\n      );\n      if (response.ok) {\n        const data = await response.json();\n        setImages(data);\n      } else {\n        console.error(\"Failed to fetch images\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching images:\", error);\n    }\n  };\n\n  const handleUpload = async () => {\n    if (!file || !selectedStore) {\n      alert(\"Please select a file and a store first!\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"store\", selectedStore);\n\n    try {\n      const response = await fetch(\"/.netlify/functions/uploadImage\", {\n        method: \"POST\",\n        body: formData,\n      });\n      if (response.ok) {\n        alert(\"Upload Successful!\");\n        fetchImages(); // Refresh images after upload\n      } else {\n        const error = await response.json();\n        alert(`Upload failed: ${error.message}`);\n      }\n    } catch (error) {\n      alert(`Upload failed: ${error.message}`);\n    }\n  };\n\n  const handleStoreChange = (event) => {\n    setSelectedStore(event.target.value);\n    fetchImages();\n  };\n\n  const handleFileChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n\n  return (\n    <Box sx={{ p: 2 }}>\n      <Typography variant=\"h4\" gutterBottom>\n        Upload and Manage Images\n      </Typography>\n      <FormControl fullWidth margin=\"normal\">\n        <InputLabel id=\"store-select-label\">Store</InputLabel>\n        <Select\n          labelId=\"store-select-label\"\n          value={selectedStore}\n          label=\"Store\"\n          onChange={handleStoreChange}\n        >\n          {stores.map((store, index) => (\n            <MenuItem key={index} value={store}>\n              {store}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <Button variant=\"contained\" component=\"label\" sx={{ mt: 2 }}>\n        Upload File\n        <input\n          type=\"file\"\n          hidden\n          onChange={handleFileChange}\n          accept=\"image/*\"\n        />\n      </Button>\n      <Button\n        onClick={handleUpload}\n        variant=\"contained\"\n        color=\"primary\"\n        sx={{ ml: 2, mt: 2 }}\n      >\n        Upload Image\n      </Button>\n\n      <Typography variant=\"h6\" sx={{ mt: 2 }}>\n        Uploaded Images in {selectedStore}\n      </Typography>\n      {images.length > 0 ? (\n        images.map((image, index) => (\n          <Box\n            key={index}\n            sx={{ display: \"flex\", alignItems: \"center\", mt: 1 }}\n          >\n            <Typography>{image.key}</Typography>\n            <Button onClick={() => deleteImage(image.key)} sx={{ ml: 1 }}>\n              <DeleteIcon />\n            </Button>\n          </Box>\n        ))\n      ) : (\n        <Typography>No images to display.</Typography>\n      )}\n    </Box>\n  );\n}\n\nexport default ImageManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}